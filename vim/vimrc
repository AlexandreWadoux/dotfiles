syntax on
filetype plugin indent on
set nocompatible            " no compatibility mode
set laststatus=2            " always display status line
set winaltkeys=no           " disable alt/meta for gui menus
set title titlestring=%t    " set your terminal title
set history=1024            " remember command line history
set showmatch               " show matching bracket when first inserted
set wildmode=longest,list,full " tab completion
set wildmenu                " enable wildmenu for completion with tab
set wildignore+=*.so,*.swp  " ignore in completion
set autoread                " reload if unchanged file was change outside vim
set novb t_vb=              " no visual error
set noerrorbells            " no sound for error (bell)
set textwidth=72            " text width to do hard line wrap
set wrap                    " wrap long lines
set linebreak               " wrap long lines at break chars
set nojoinspaces            " prevents double spaces when joining lines
set fileformat=unix         " default file format
set cindent ai si           " cindent, auto indent, smart indent
set tabstop=4               " set number of spaces used for tab
set shiftwidth=0            " use tabstop as number of spaces with autoindent
set expandtab               " expand tab to spaces
set smarttab                " replace tab with spaces
set shiftround              " round indents to multiples of shiftwidth
set backspace=2             " backspace over ident, eol and start
set foldmethod=manual       " manual folding, speed boost in large files
set nofoldenable            " remove to enable folding
set hlsearch                " highlight search result
set ignorecase              " search ignores case
set smartcase               " search is case sensitive if using upper case
set incsearch               " enable incremental search
set hidden                  " when abandoning a buffer, hide it
set noswapfile              " disable swap file
set number                  " enable line numbers
set virtualedit=onemore     " allow for cursor beyond last character
set shortmess=filmnxtToOI   " customize messages
set splitbelow              " splits occur below current window
set splitright              " splits occur to the right of current window
set nostartofline           " donâ€™t reset cursor to start of line when moving
set exrc                    " enable per-directory .vimrc files
set secure                  " disable unsafe commands in per-directory .vimrc
set nomodeline              " disable modelines (exploits exist)

" use system clipboard
if has('unnamedplus')
    set clipboard=unnamedplus
else
    set clipboard=unnamed
endif

" configure viminfo
if has('nvim')
    set viminfo='1000,\"100,:1000,n~/.nviminfo
else
    set viminfo='1000,\"100,:1000,n~/.viminfo
endif

" configure spellchecking
set spellfile=~/.vimspell.add
set spellsuggest=best,10

" configure views
set viewdir=~/.vim_view

" configure undos
try
    set undofile
    set undodir=~/.vim_undo
catch
endtry

" set gui options
if has('gui_running')
    set guioptions-=m " remove menubar
    set guioptions-=T " remove toolbar
    set guioptions-=r " remove scrollbar
    set guioptions-=L " remove right scrollbar
    set mousemodel=popup
endif

" change colors settings
set t_Co=256 " enable 256 colors
if &term =~ '256color'
    set term=xterm
    set t_ut= " disable background color erase
endif

" set grep program
if executable('rg')
    set grepprg=rg\ --vimgrep
    set grepformat=%f:%l:%c:%m
elseif executable('ag')
    set grepprg=ag\ --vimgrep
    set grepformat=%f:%l:%c:%m,%f:%l:%m
elseif executable('ack')
    set grepprg=ack\ --nogroup\ --nocolor\ --column
    set grepformat=%f:%l:%c:%m,%f:%l:%m
endif

" remap leader
let mapleader = " "
" Split line
nnoremap S i<cr><esc>^mwgk:silent! s/\v +$//<cr>:noh<cr>$
" Switch off highlighting
nnoremap <silent> <backspace> :noh<CR>
" Save a few keystrokes
nnoremap <expr> <cr> (&buftype is# "" ? ":" : "<cr>")
" disable Ex mode key
nnoremap Q <nop>
" make Y's behavior sane
nnoremap Y y$

" Load other vim settings
if filereadable(expand('~/.vim/plugin/plugins.vim'))
    source ~/.vim/plugin/plugins.vim
endif
for f in split(glob('~/.vimrc.local.*'), '\n')
    execute 'source ' . fnameescape(f)
endfor
